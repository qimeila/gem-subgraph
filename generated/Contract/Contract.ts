// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Contract__affiliatesResult {
  value0: Address;
  value1: boolean;

  constructor(value0: Address, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }
}

export class Contract__sponsoredMarketsResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  GOV(): Address {
    let result = super.call("GOV", "GOV():(address)", []);

    return result[0].toAddress();
  }

  try_GOV(): ethereum.CallResult<Address> {
    let result = super.tryCall("GOV", "GOV():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  affiliates(param0: BigInt): Contract__affiliatesResult {
    let result = super.call(
      "affiliates",
      "affiliates(uint256):(address,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Contract__affiliatesResult(
      result[0].toAddress(),
      result[1].toBoolean()
    );
  }

  try_affiliates(
    param0: BigInt
  ): ethereum.CallResult<Contract__affiliatesResult> {
    let result = super.tryCall(
      "affiliates",
      "affiliates(uint256):(address,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__affiliatesResult(value[0].toAddress(), value[1].toBoolean())
    );
  }

  baseFees(): BigInt {
    let result = super.call("baseFees", "baseFees():(uint256)", []);

    return result[0].toBigInt();
  }

  try_baseFees(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("baseFees", "baseFees():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  converter(): Address {
    let result = super.call("converter", "converter():(address)", []);

    return result[0].toAddress();
  }

  try_converter(): ethereum.CallResult<Address> {
    let result = super.tryCall("converter", "converter():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  guardian(): Address {
    let result = super.call("guardian", "guardian():(address)", []);

    return result[0].toAddress();
  }

  try_guardian(): ethereum.CallResult<Address> {
    let result = super.tryCall("guardian", "guardian():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  marketRegistry(): Address {
    let result = super.call("marketRegistry", "marketRegistry():(address)", []);

    return result[0].toAddress();
  }

  try_marketRegistry(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "marketRegistry",
      "marketRegistry():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  onERC1155BatchReceived(
    param0: Address,
    param1: Address,
    param2: Array<BigInt>,
    param3: Array<BigInt>,
    param4: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigIntArray(param2),
        ethereum.Value.fromUnsignedBigIntArray(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155BatchReceived(
    param0: Address,
    param1: Address,
    param2: Array<BigInt>,
    param3: Array<BigInt>,
    param4: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigIntArray(param2),
        ethereum.Value.fromUnsignedBigIntArray(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC1155Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: BigInt,
    param4: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromUnsignedBigInt(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: BigInt,
    param4: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromUnsignedBigInt(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC721Received1(param0: Address, param1: BigInt, param2: Bytes): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromBytes(param2)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC721Received1(
    param0: Address,
    param1: BigInt,
    param2: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromBytes(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  openForFreeTrades(): boolean {
    let result = super.call(
      "openForFreeTrades",
      "openForFreeTrades():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_openForFreeTrades(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "openForFreeTrades",
      "openForFreeTrades():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  openForTrades(): boolean {
    let result = super.call("openForTrades", "openForTrades():(bool)", []);

    return result[0].toBoolean();
  }

  try_openForTrades(): ethereum.CallResult<boolean> {
    let result = super.tryCall("openForTrades", "openForTrades():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  punkProxy(): Address {
    let result = super.call("punkProxy", "punkProxy():(address)", []);

    return result[0].toAddress();
  }

  try_punkProxy(): ethereum.CallResult<Address> {
    let result = super.tryCall("punkProxy", "punkProxy():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  sponsoredMarkets(param0: BigInt): Contract__sponsoredMarketsResult {
    let result = super.call(
      "sponsoredMarkets",
      "sponsoredMarkets(uint256):(uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Contract__sponsoredMarketsResult(
      result[0].toBigInt(),
      result[1].toBoolean()
    );
  }

  try_sponsoredMarkets(
    param0: BigInt
  ): ethereum.CallResult<Contract__sponsoredMarketsResult> {
    let result = super.tryCall(
      "sponsoredMarkets",
      "sponsoredMarkets(uint256):(uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__sponsoredMarketsResult(
        value[0].toBigInt(),
        value[1].toBoolean()
      )
    );
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _marketRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _converter(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _guardian(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddAffiliateCall extends ethereum.Call {
  get inputs(): AddAffiliateCall__Inputs {
    return new AddAffiliateCall__Inputs(this);
  }

  get outputs(): AddAffiliateCall__Outputs {
    return new AddAffiliateCall__Outputs(this);
  }
}

export class AddAffiliateCall__Inputs {
  _call: AddAffiliateCall;

  constructor(call: AddAffiliateCall) {
    this._call = call;
  }

  get _affiliate(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddAffiliateCall__Outputs {
  _call: AddAffiliateCall;

  constructor(call: AddAffiliateCall) {
    this._call = call;
  }
}

export class AddSponsoredMarketCall extends ethereum.Call {
  get inputs(): AddSponsoredMarketCall__Inputs {
    return new AddSponsoredMarketCall__Inputs(this);
  }

  get outputs(): AddSponsoredMarketCall__Outputs {
    return new AddSponsoredMarketCall__Outputs(this);
  }
}

export class AddSponsoredMarketCall__Inputs {
  _call: AddSponsoredMarketCall;

  constructor(call: AddSponsoredMarketCall) {
    this._call = call;
  }

  get _marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AddSponsoredMarketCall__Outputs {
  _call: AddSponsoredMarketCall;

  constructor(call: AddSponsoredMarketCall) {
    this._call = call;
  }
}

export class BatchBuyFromOpenSeaCall extends ethereum.Call {
  get inputs(): BatchBuyFromOpenSeaCall__Inputs {
    return new BatchBuyFromOpenSeaCall__Inputs(this);
  }

  get outputs(): BatchBuyFromOpenSeaCall__Outputs {
    return new BatchBuyFromOpenSeaCall__Outputs(this);
  }
}

export class BatchBuyFromOpenSeaCall__Inputs {
  _call: BatchBuyFromOpenSeaCall;

  constructor(call: BatchBuyFromOpenSeaCall) {
    this._call = call;
  }

  get openseaTrades(): Array<BatchBuyFromOpenSeaCallOpenseaTradesStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      BatchBuyFromOpenSeaCallOpenseaTradesStruct
    >();
  }
}

export class BatchBuyFromOpenSeaCall__Outputs {
  _call: BatchBuyFromOpenSeaCall;

  constructor(call: BatchBuyFromOpenSeaCall) {
    this._call = call;
  }
}

export class BatchBuyFromOpenSeaCallOpenseaTradesStruct extends ethereum.Tuple {
  get value(): BigInt {
    return this[0].toBigInt();
  }

  get tradeData(): Bytes {
    return this[1].toBytes();
  }
}

export class BatchBuyWithERC20sCall extends ethereum.Call {
  get inputs(): BatchBuyWithERC20sCall__Inputs {
    return new BatchBuyWithERC20sCall__Inputs(this);
  }

  get outputs(): BatchBuyWithERC20sCall__Outputs {
    return new BatchBuyWithERC20sCall__Outputs(this);
  }
}

export class BatchBuyWithERC20sCall__Inputs {
  _call: BatchBuyWithERC20sCall;

  constructor(call: BatchBuyWithERC20sCall) {
    this._call = call;
  }

  get erc20Details(): BatchBuyWithERC20sCallErc20DetailsStruct {
    return changetype<BatchBuyWithERC20sCallErc20DetailsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get tradeDetails(): Array<BatchBuyWithERC20sCallTradeDetailsStruct> {
    return this._call.inputValues[1].value.toTupleArray<
      BatchBuyWithERC20sCallTradeDetailsStruct
    >();
  }

  get converstionDetails(): Array<
    BatchBuyWithERC20sCallConverstionDetailsStruct
  > {
    return this._call.inputValues[2].value.toTupleArray<
      BatchBuyWithERC20sCallConverstionDetailsStruct
    >();
  }

  get dustTokens(): Array<Address> {
    return this._call.inputValues[3].value.toAddressArray();
  }
}

export class BatchBuyWithERC20sCall__Outputs {
  _call: BatchBuyWithERC20sCall;

  constructor(call: BatchBuyWithERC20sCall) {
    this._call = call;
  }
}

export class BatchBuyWithERC20sCallErc20DetailsStruct extends ethereum.Tuple {
  get tokenAddrs(): Array<Address> {
    return this[0].toAddressArray();
  }

  get amounts(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class BatchBuyWithERC20sCallTradeDetailsStruct extends ethereum.Tuple {
  get marketId(): BigInt {
    return this[0].toBigInt();
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }

  get tradeData(): Bytes {
    return this[2].toBytes();
  }
}

export class BatchBuyWithERC20sCallConverstionDetailsStruct extends ethereum.Tuple {
  get conversionData(): Bytes {
    return this[0].toBytes();
  }
}

export class BatchBuyWithETHCall extends ethereum.Call {
  get inputs(): BatchBuyWithETHCall__Inputs {
    return new BatchBuyWithETHCall__Inputs(this);
  }

  get outputs(): BatchBuyWithETHCall__Outputs {
    return new BatchBuyWithETHCall__Outputs(this);
  }
}

export class BatchBuyWithETHCall__Inputs {
  _call: BatchBuyWithETHCall;

  constructor(call: BatchBuyWithETHCall) {
    this._call = call;
  }

  get tradeDetails(): Array<BatchBuyWithETHCallTradeDetailsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      BatchBuyWithETHCallTradeDetailsStruct
    >();
  }
}

export class BatchBuyWithETHCall__Outputs {
  _call: BatchBuyWithETHCall;

  constructor(call: BatchBuyWithETHCall) {
    this._call = call;
  }
}

export class BatchBuyWithETHCallTradeDetailsStruct extends ethereum.Tuple {
  get marketId(): BigInt {
    return this[0].toBigInt();
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }

  get tradeData(): Bytes {
    return this[2].toBytes();
  }
}

export class CloseAllTradesCall extends ethereum.Call {
  get inputs(): CloseAllTradesCall__Inputs {
    return new CloseAllTradesCall__Inputs(this);
  }

  get outputs(): CloseAllTradesCall__Outputs {
    return new CloseAllTradesCall__Outputs(this);
  }
}

export class CloseAllTradesCall__Inputs {
  _call: CloseAllTradesCall;

  constructor(call: CloseAllTradesCall) {
    this._call = call;
  }
}

export class CloseAllTradesCall__Outputs {
  _call: CloseAllTradesCall;

  constructor(call: CloseAllTradesCall) {
    this._call = call;
  }
}

export class MultiAssetSwapCall extends ethereum.Call {
  get inputs(): MultiAssetSwapCall__Inputs {
    return new MultiAssetSwapCall__Inputs(this);
  }

  get outputs(): MultiAssetSwapCall__Outputs {
    return new MultiAssetSwapCall__Outputs(this);
  }
}

export class MultiAssetSwapCall__Inputs {
  _call: MultiAssetSwapCall;

  constructor(call: MultiAssetSwapCall) {
    this._call = call;
  }

  get erc20Details(): MultiAssetSwapCallErc20DetailsStruct {
    return changetype<MultiAssetSwapCallErc20DetailsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get erc721Details(): Array<MultiAssetSwapCallErc721DetailsStruct> {
    return this._call.inputValues[1].value.toTupleArray<
      MultiAssetSwapCallErc721DetailsStruct
    >();
  }

  get erc1155Details(): Array<MultiAssetSwapCallErc1155DetailsStruct> {
    return this._call.inputValues[2].value.toTupleArray<
      MultiAssetSwapCallErc1155DetailsStruct
    >();
  }

  get converstionDetails(): Array<MultiAssetSwapCallConverstionDetailsStruct> {
    return this._call.inputValues[3].value.toTupleArray<
      MultiAssetSwapCallConverstionDetailsStruct
    >();
  }

  get tradeDetails(): Array<MultiAssetSwapCallTradeDetailsStruct> {
    return this._call.inputValues[4].value.toTupleArray<
      MultiAssetSwapCallTradeDetailsStruct
    >();
  }

  get dustTokens(): Array<Address> {
    return this._call.inputValues[5].value.toAddressArray();
  }

  get feeDetails(): Array<BigInt> {
    return this._call.inputValues[6].value.toBigIntArray();
  }
}

export class MultiAssetSwapCall__Outputs {
  _call: MultiAssetSwapCall;

  constructor(call: MultiAssetSwapCall) {
    this._call = call;
  }
}

export class MultiAssetSwapCallErc20DetailsStruct extends ethereum.Tuple {
  get tokenAddrs(): Array<Address> {
    return this[0].toAddressArray();
  }

  get amounts(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class MultiAssetSwapCallErc721DetailsStruct extends ethereum.Tuple {
  get tokenAddr(): Address {
    return this[0].toAddress();
  }

  get to(): Array<Address> {
    return this[1].toAddressArray();
  }

  get ids(): Array<BigInt> {
    return this[2].toBigIntArray();
  }
}

export class MultiAssetSwapCallErc1155DetailsStruct extends ethereum.Tuple {
  get tokenAddr(): Address {
    return this[0].toAddress();
  }

  get ids(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this[2].toBigIntArray();
  }
}

export class MultiAssetSwapCallConverstionDetailsStruct extends ethereum.Tuple {
  get conversionData(): Bytes {
    return this[0].toBytes();
  }
}

export class MultiAssetSwapCallTradeDetailsStruct extends ethereum.Tuple {
  get marketId(): BigInt {
    return this[0].toBigInt();
  }

  get value(): BigInt {
    return this[1].toBigInt();
  }

  get tradeData(): Bytes {
    return this[2].toBytes();
  }
}

export class OnERC1155BatchReceivedCall extends ethereum.Call {
  get inputs(): OnERC1155BatchReceivedCall__Inputs {
    return new OnERC1155BatchReceivedCall__Inputs(this);
  }

  get outputs(): OnERC1155BatchReceivedCall__Outputs {
    return new OnERC1155BatchReceivedCall__Outputs(this);
  }
}

export class OnERC1155BatchReceivedCall__Inputs {
  _call: OnERC1155BatchReceivedCall;

  constructor(call: OnERC1155BatchReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get value3(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get value4(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnERC1155BatchReceivedCall__Outputs {
  _call: OnERC1155BatchReceivedCall;

  constructor(call: OnERC1155BatchReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class OnERC1155ReceivedCall extends ethereum.Call {
  get inputs(): OnERC1155ReceivedCall__Inputs {
    return new OnERC1155ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC1155ReceivedCall__Outputs {
    return new OnERC1155ReceivedCall__Outputs(this);
  }
}

export class OnERC1155ReceivedCall__Inputs {
  _call: OnERC1155ReceivedCall;

  constructor(call: OnERC1155ReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value3(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get value4(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnERC1155ReceivedCall__Outputs {
  _call: OnERC1155ReceivedCall;

  constructor(call: OnERC1155ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class OnERC721ReceivedCall extends ethereum.Call {
  get inputs(): OnERC721ReceivedCall__Inputs {
    return new OnERC721ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC721ReceivedCall__Outputs {
    return new OnERC721ReceivedCall__Outputs(this);
  }
}

export class OnERC721ReceivedCall__Inputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value3(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class OnERC721ReceivedCall__Outputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class OnERC721Received1Call extends ethereum.Call {
  get inputs(): OnERC721Received1Call__Inputs {
    return new OnERC721Received1Call__Inputs(this);
  }

  get outputs(): OnERC721Received1Call__Outputs {
    return new OnERC721Received1Call__Outputs(this);
  }
}

export class OnERC721Received1Call__Inputs {
  _call: OnERC721Received1Call;

  constructor(call: OnERC721Received1Call) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get value2(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class OnERC721Received1Call__Outputs {
  _call: OnERC721Received1Call;

  constructor(call: OnERC721Received1Call) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RescueERC1155Call extends ethereum.Call {
  get inputs(): RescueERC1155Call__Inputs {
    return new RescueERC1155Call__Inputs(this);
  }

  get outputs(): RescueERC1155Call__Outputs {
    return new RescueERC1155Call__Outputs(this);
  }
}

export class RescueERC1155Call__Inputs {
  _call: RescueERC1155Call;

  constructor(call: RescueERC1155Call) {
    this._call = call;
  }

  get asset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get recipient(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class RescueERC1155Call__Outputs {
  _call: RescueERC1155Call;

  constructor(call: RescueERC1155Call) {
    this._call = call;
  }
}

export class RescueERC20Call extends ethereum.Call {
  get inputs(): RescueERC20Call__Inputs {
    return new RescueERC20Call__Inputs(this);
  }

  get outputs(): RescueERC20Call__Outputs {
    return new RescueERC20Call__Outputs(this);
  }
}

export class RescueERC20Call__Inputs {
  _call: RescueERC20Call;

  constructor(call: RescueERC20Call) {
    this._call = call;
  }

  get asset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RescueERC20Call__Outputs {
  _call: RescueERC20Call;

  constructor(call: RescueERC20Call) {
    this._call = call;
  }
}

export class RescueERC721Call extends ethereum.Call {
  get inputs(): RescueERC721Call__Inputs {
    return new RescueERC721Call__Inputs(this);
  }

  get outputs(): RescueERC721Call__Outputs {
    return new RescueERC721Call__Outputs(this);
  }
}

export class RescueERC721Call__Inputs {
  _call: RescueERC721Call;

  constructor(call: RescueERC721Call) {
    this._call = call;
  }

  get asset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get recipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class RescueERC721Call__Outputs {
  _call: RescueERC721Call;

  constructor(call: RescueERC721Call) {
    this._call = call;
  }
}

export class RescueETHCall extends ethereum.Call {
  get inputs(): RescueETHCall__Inputs {
    return new RescueETHCall__Inputs(this);
  }

  get outputs(): RescueETHCall__Outputs {
    return new RescueETHCall__Outputs(this);
  }
}

export class RescueETHCall__Inputs {
  _call: RescueETHCall;

  constructor(call: RescueETHCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RescueETHCall__Outputs {
  _call: RescueETHCall;

  constructor(call: RescueETHCall) {
    this._call = call;
  }
}

export class SetBaseFeesCall extends ethereum.Call {
  get inputs(): SetBaseFeesCall__Inputs {
    return new SetBaseFeesCall__Inputs(this);
  }

  get outputs(): SetBaseFeesCall__Outputs {
    return new SetBaseFeesCall__Outputs(this);
  }
}

export class SetBaseFeesCall__Inputs {
  _call: SetBaseFeesCall;

  constructor(call: SetBaseFeesCall) {
    this._call = call;
  }

  get _baseFees(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetBaseFeesCall__Outputs {
  _call: SetBaseFeesCall;

  constructor(call: SetBaseFeesCall) {
    this._call = call;
  }
}

export class SetConverterCall extends ethereum.Call {
  get inputs(): SetConverterCall__Inputs {
    return new SetConverterCall__Inputs(this);
  }

  get outputs(): SetConverterCall__Outputs {
    return new SetConverterCall__Outputs(this);
  }
}

export class SetConverterCall__Inputs {
  _call: SetConverterCall;

  constructor(call: SetConverterCall) {
    this._call = call;
  }

  get _converter(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetConverterCall__Outputs {
  _call: SetConverterCall;

  constructor(call: SetConverterCall) {
    this._call = call;
  }
}

export class SetMarketRegistryCall extends ethereum.Call {
  get inputs(): SetMarketRegistryCall__Inputs {
    return new SetMarketRegistryCall__Inputs(this);
  }

  get outputs(): SetMarketRegistryCall__Outputs {
    return new SetMarketRegistryCall__Outputs(this);
  }
}

export class SetMarketRegistryCall__Inputs {
  _call: SetMarketRegistryCall;

  constructor(call: SetMarketRegistryCall) {
    this._call = call;
  }

  get _marketRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMarketRegistryCall__Outputs {
  _call: SetMarketRegistryCall;

  constructor(call: SetMarketRegistryCall) {
    this._call = call;
  }
}

export class SetOneTimeApprovalCall extends ethereum.Call {
  get inputs(): SetOneTimeApprovalCall__Inputs {
    return new SetOneTimeApprovalCall__Inputs(this);
  }

  get outputs(): SetOneTimeApprovalCall__Outputs {
    return new SetOneTimeApprovalCall__Outputs(this);
  }
}

export class SetOneTimeApprovalCall__Inputs {
  _call: SetOneTimeApprovalCall;

  constructor(call: SetOneTimeApprovalCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get operator(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetOneTimeApprovalCall__Outputs {
  _call: SetOneTimeApprovalCall;

  constructor(call: SetOneTimeApprovalCall) {
    this._call = call;
  }
}

export class SetOpenForFreeTradesCall extends ethereum.Call {
  get inputs(): SetOpenForFreeTradesCall__Inputs {
    return new SetOpenForFreeTradesCall__Inputs(this);
  }

  get outputs(): SetOpenForFreeTradesCall__Outputs {
    return new SetOpenForFreeTradesCall__Outputs(this);
  }
}

export class SetOpenForFreeTradesCall__Inputs {
  _call: SetOpenForFreeTradesCall;

  constructor(call: SetOpenForFreeTradesCall) {
    this._call = call;
  }

  get _openForFreeTrades(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetOpenForFreeTradesCall__Outputs {
  _call: SetOpenForFreeTradesCall;

  constructor(call: SetOpenForFreeTradesCall) {
    this._call = call;
  }
}

export class SetOpenForTradesCall extends ethereum.Call {
  get inputs(): SetOpenForTradesCall__Inputs {
    return new SetOpenForTradesCall__Inputs(this);
  }

  get outputs(): SetOpenForTradesCall__Outputs {
    return new SetOpenForTradesCall__Outputs(this);
  }
}

export class SetOpenForTradesCall__Inputs {
  _call: SetOpenForTradesCall;

  constructor(call: SetOpenForTradesCall) {
    this._call = call;
  }

  get _openForTrades(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetOpenForTradesCall__Outputs {
  _call: SetOpenForTradesCall;

  constructor(call: SetOpenForTradesCall) {
    this._call = call;
  }
}

export class SetUpCall extends ethereum.Call {
  get inputs(): SetUpCall__Inputs {
    return new SetUpCall__Inputs(this);
  }

  get outputs(): SetUpCall__Outputs {
    return new SetUpCall__Outputs(this);
  }
}

export class SetUpCall__Inputs {
  _call: SetUpCall;

  constructor(call: SetUpCall) {
    this._call = call;
  }
}

export class SetUpCall__Outputs {
  _call: SetUpCall;

  constructor(call: SetUpCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateAffiliateCall extends ethereum.Call {
  get inputs(): UpdateAffiliateCall__Inputs {
    return new UpdateAffiliateCall__Inputs(this);
  }

  get outputs(): UpdateAffiliateCall__Outputs {
    return new UpdateAffiliateCall__Outputs(this);
  }
}

export class UpdateAffiliateCall__Inputs {
  _call: UpdateAffiliateCall;

  constructor(call: UpdateAffiliateCall) {
    this._call = call;
  }

  get _affiliateIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _affiliate(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _IsActive(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class UpdateAffiliateCall__Outputs {
  _call: UpdateAffiliateCall;

  constructor(call: UpdateAffiliateCall) {
    this._call = call;
  }
}

export class UpdateGuardianCall extends ethereum.Call {
  get inputs(): UpdateGuardianCall__Inputs {
    return new UpdateGuardianCall__Inputs(this);
  }

  get outputs(): UpdateGuardianCall__Outputs {
    return new UpdateGuardianCall__Outputs(this);
  }
}

export class UpdateGuardianCall__Inputs {
  _call: UpdateGuardianCall;

  constructor(call: UpdateGuardianCall) {
    this._call = call;
  }

  get _guardian(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateGuardianCall__Outputs {
  _call: UpdateGuardianCall;

  constructor(call: UpdateGuardianCall) {
    this._call = call;
  }
}

export class UpdateSponsoredMarketCall extends ethereum.Call {
  get inputs(): UpdateSponsoredMarketCall__Inputs {
    return new UpdateSponsoredMarketCall__Inputs(this);
  }

  get outputs(): UpdateSponsoredMarketCall__Outputs {
    return new UpdateSponsoredMarketCall__Outputs(this);
  }
}

export class UpdateSponsoredMarketCall__Inputs {
  _call: UpdateSponsoredMarketCall;

  constructor(call: UpdateSponsoredMarketCall) {
    this._call = call;
  }

  get _marketIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _marketId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _isActive(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class UpdateSponsoredMarketCall__Outputs {
  _call: UpdateSponsoredMarketCall;

  constructor(call: UpdateSponsoredMarketCall) {
    this._call = call;
  }
}
